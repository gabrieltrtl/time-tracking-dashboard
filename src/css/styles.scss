@import url('https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap');
@import './utils/utilities';


// CSS RESET
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
}

input, button, textarea, select {
  font: inherit;
}

ol, ul {
	list-style: none;
}

img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}

a {
  text-decoration: none;
  color: inherit;
}

button, fieldset {
  border: none;
}

body {
  min-height: 100vh;
  font-family: "Rubik", sans-serif;
  background-color: $color1;
  color: $neutral-color-1;
}

.container__main {
  padding: 5.0625rem 1.5rem;
  max-width: 548px;
  margin: 0 auto;
  display: grid;
  @include device(desktop) {
    max-width: 1110px;
    grid-template-columns: auto 1fr;
    gap: 30px;
  }
}

.main__profile {
  background-color: $color2;
  border-radius: 15px;
  margin-bottom: 62px;
  @include device(desktop) {
    margin-bottom: initial;
  }
}


.profile__header {
  display: flex;
  align-items: center;
  gap: 20px;
  background-color: $color3;
  border-radius: 15px;
  padding: 35px 39px 34px 32px;
  img {
    max-width: 64px;
    border: 3px solid $neutral-color-1;
    border-radius: 50%;
    @include device(desktop) {
      max-width: 78px;
    }
  }
  @include device(desktop) {
    max-width: 255px;
    flex-direction: column;
    align-items: flex-start;
    padding: 37px 84px 80px 32px;
    gap: 43px;
  }
}

.profile__intro {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.profile__name {
  font-weight: 300;
  font-size: map-get($fonts, "$medium");
  @include device(desktop) {
  font-size: map-get($fonts, "$large");
  }
}

.profile__report {
  font-size: map-get($fonts, "$small");
  color: $color4;
}

.profile__time {
  display: flex;
  padding: 24px 0;
  justify-content: space-evenly;
  button {
    font-size: map-get($fonts, "$small2");
    color: $color5;
    background: none;
    &:hover {
      color: $neutral-color-1;
      cursor: pointer;
    }
  }
  @include device(desktop) {
    flex-direction: column;
    align-items: flex-start;
    padding: 26px 0 32px 32px;
    gap: 21px;
  }
}

.list {
  @include device(desktop) {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    margin-top: 45px;
    gap: 75px 30px;
  }
}

.list__item {
  position: relative;
  background-color: $color2;
  border-radius: 15px;
  padding: 28px 24px;
  &::before {
    content: "";  
    position: absolute;
    height: 100px;
    top: -45px;
    left: 0;
    right: 0;
    z-index: -1;
    border-radius: 15px;
    background-image: url(../../images/icon-self-care.svg);
    background-repeat: no-repeat;
    background-position: top -10px right 17px;
    background-size: 72px 66px;
  }
  &.work::before { 
    background-color: #FF8B64;
    background-image: url(../../images/icon-work.svg);
    }
    &.play::before {
      background-color: #55C2E6;
      background-image: url(../../images/icon-play.svg);
    }
    &.study::before {
      background-color: #FF5E7D;
      background-image: url(../../images/icon-study.svg);
    }
    &.exercise::before {
      background-color: #4BCF82;
      background-image: url(../../images/icon-exercise.svg);
    }
    &.social::before {
      background-color: #7335D2;
      background-image: url(../../images/icon-social.svg);
    }
    &.self-care::before {
      background-color: #F1C75B;
      background-image: url(../../images/icon-self-care.svg);
    }
  }

.list__item:not(:last-child) {
  margin-bottom: 62px;
  @include device(desktop) {
    margin-bottom: initial;
  }
}

.item__heading,
.item__count {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.item__heading {
  margin-bottom: 7px;
}

.item__title {
  font-size: map-get($fonts, "$small2");
  font-weight: 500;
}

.current-count {
  font-size: map-get($fonts, "$medium2");
  font-weight: 300;
}

.past-count {
  color: $color4;
  font-size: map-get($fonts, "$small");
}